#!/bin/bash
##===========================  ramroot-build  ============================##
# This script builds the ramroot build and runtime hook required to copy
# the root filesystem to RAM.  This script must be run in a normal login
# session (no chroot) to correctly access the UUID of the root partition.

# get ramroot/bin, ramroot/build, and ramroot/src directory paths:
binDir="$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )"
cd "$binDir"
cd ..
srcDir="$PWD/src"
buildDir="$PWD/build"

# check if root even mounted:
if (! mountpoint / >/dev/null 2>&1); then
    # FAIL: root not mounted:
    echo "!: Nothing mounted: /"
    exit 1
fi
# try to get root UUID from lsblk:
rootUUID=
rootUUID=`lsblk -n -o mountpoint,UUID | grep -Po '(^| +)/ +\K[^ ]+'`
if [ -z "$rootUUID" ]; then
    # try to get root UUID from /etc/fstab:
    if [ -f /etc/fstab ]; then
        rootUUID=`grep -Po 'UUID=\K[^ ]+(?= +/ )' /etc/fstab`
        if [ -z "$rootUUID" ]; then
            # FAIL: unable to obtain root UUID:
            echo "!: Unable to get UUID of root."
            exit 1
        fi
    fi
fi
echo ":: Detected / UUID: $rootUUID"

# check if /boot even mounted:
if (mountpoint /boot >/dev/null 2>&1); then
    # try to get /boot UUID from lsblk:
    bootUUID=
    bootUUID=`lsblk -n -o mountpoint,UUID | grep -Po '(^| +)/boot +\K[^ ]+'`
    # try to get /boot UUID from /etc/fstab:
    if [ -z "$bootUUID" ] && [ -f /etc/fstab ]; then
        bootUUID=`grep -Po 'UUID=\K[^ ]+(?= +/boot )' /etc/fstab`
    fi
    if [ -n "$bootUUID" ]; then
        echo ":: Detected /boot UUID: $bootUUID"
    fi
fi

# prepare build:
hooksDir="/usr/lib/initcpio/hooks"
installDir="/usr/lib/initcpio/install"
mkdir -p "$buildDir"
sudo -k

# make build and runtime hooks:
cp "$srcDir/initcpio/install/ramroot" "$buildDir/ramroot_install" &&
sed "s@rootUUID=.*@rootUUID=\'$rootUUID\'@g; \
    s@bootUUID=.*@bootUUID=\'$bootUUID\'@g;" \
    "$srcDir/initcpio/hooks/ramroot" > "$buildDir/ramroot_hook" &&
echo ":: ramroot_hooks built in $buildDir" &&

# copy build and runtime hooks to /usr/lib/initcpio/:
echo "#: sudo cp $buildDir/ramroot_hook $hooksDir/ramroot" &&
echo "#: sudo cp $buildDir/ramroot_install $installDir/ramroot" &&
sudo cp "$buildDir/ramroot_hook" "$hooksDir/ramroot" &&
sudo cp "$buildDir/ramroot_install" "$installDir/ramroot" &&
echo ":: ramroot hooks installed" &&
exit 0 ||
echo "!: ramroot hooks NOT installed" &&
exit 1
