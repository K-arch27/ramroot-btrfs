#!/bin/bash
##==========================  ramroot-disable  ===========================##
# This script removes the HOOK and MODULES from /etc/mkinitcpio.conf
# required to load the root filesystem into RAM at boot.  A new linux
# cpio boot image is built with these changes.

# get ramroot/bin and ramroot/build directory paths:
binDir="$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )"
cd "$binDir"
cd ..
buildDir="$PWD/build"

# get current init MODULES and HOOKS:
initMODULES=`grep -P '^ *MODULES=' /etc/mkinitcpio.conf`
initHOOKS=`grep -P '^ *HOOKS=' /etc/mkinitcpio.conf`

fNew=0
# remove zram MODULE:
if [[ "$initMODULES" =~ zram ]]; then
    initMODULES=`echo "$initMODULES" | sed -r 's/( zram|zram |zram)//g'`
    echo ":: Removed MODULE: zram"
    fNew=1
fi
# remove ext4 MODULE:
if [[ "$initMODULES" =~ ext4 ]]; then
    initMODULES=`echo "$initMODULES" | sed -r 's/( ext4|ext4 |ext4)//g'`
    echo ":: Removed MODULE: ext4"
    fNew=1
fi
# remove ramroot HOOK:
if [[ "$initHOOKS" =~ ramroot ]]; then
    initHOOKS=`echo "$initHOOKS" | sed -r 's/( ramroot|ramroot |ramroot)//g'`
    echo ":: Removed HOOK: ramroot"
    fNew=1
fi

if [ $fNew -eq 1 ]; then
    # prepare build:
    mkdir -p "$buildDir"
    sudo -k

    # write new /ect/mkinitcpio.conf:
    sed "s@^MODULES=.*@$initMODULES@g; \
        s@^HOOKS=.*@$initHOOKS@g;" \
        /etc/mkinitcpio.conf > "$buildDir/mkinitcpio.conf" &&
    echo ":: new mkinitcpio.conf created in $buildDir"

    # copy new mkinitcpio.conf to /etc and rebuild linux image:
    echo ":# sudo cp $buildDir/mkinitcpio.conf /etc/mkinitcpio.conf"
    echo ":# sudo mkinitcpio -p linux"
    sudo cp "$buildDir/mkinitcpio.conf" /etc/mkinitcpio.conf &&
    sudo mkinitcpio -p linux &&
    echo ":: ramroot disabled"
else
    echo ":: ramroot already disabled"
fi


