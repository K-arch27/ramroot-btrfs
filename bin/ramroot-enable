#!/bin/bash
##===========================  ramroot-enable  ===========================##
# This script adds the necessary MODULES and HOOKS to /etc/mkinitcpio.conf
# required to load the root filesystem into RAM at boot.  A new linux
# cpio boot image is built with these changes.

# Check for ramroot hook and install:
if [ ! -f /usr/lib/initcpio/hooks/ramroot ] ||
[ ! -f /usr/lib/initcpio/install/ramroot ]; then
    echo ":: Missing initcpio scripts, run install first."
    exit 1
fi

# get current init MODULES and HOOKS:
initMODULES=`grep -P '^ *MODULES=' /etc/mkinitcpio.conf`
initHOOKS=`grep -P '^ *HOOKS=' /etc/mkinitcpio.conf`

# add zram and ext4 to MODULES:
if [[ ! "$initMODULES" =~ zram ]]; then
    if [ "$initMODULES" = 'MODULES=""' ]; then
        initMODULES='MODULES="zram"'
    else
        initMODULES="${initMODULES%*\"} zram\""
    fi
    echo ":: Added MODULE: zram"
fi
if [[ ! "$initMODULES" =~ ext4 ]]; then
    initMODULES="${initMODULES%*\"} ext4\""
    echo ":: Added MODULE: ext4"
fi

# add ramroot HOOK:
if [[ ! "$initHOOKS" =~ ramroot ]]; then
    initHOOKS="${initHOOKS%udev*}udev ramroot${initHOOKS#*udev}"
    echo ":: Added HOOK: ramroot"
fi

# write new /ect/mkinitcpio.conf:
sed "s@^MODULES=.*@$initMODULES@g; \
    s@^HOOKS=.*@$initHOOKS@g;" \
    /etc/mkinitcpio.conf > /tmp/mkinitcpio_tmp
cp /tmp/mkinitcpio_tmp /etc/mkinitcpio.conf
rm /tmp/mkinitcpio_tmp

# generate new linux image:
mkinitcpio -p linux
