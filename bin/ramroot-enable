#!/bin/bash
##===========================  ramroot-enable  ===========================##
# This script adds the necessary MODULES and HOOKS to /etc/mkinitcpio.conf
# required to load the root filesystem into RAM at boot.  A new linux
# cpio boot image is built with these changes.

# get ramroot/bin and ramroot/build directory paths:
binDir="$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )"
cd "$binDir"
cd ..
buildDir="$PWD/build"

# Check for ramroot hooks:
if [ ! -f /usr/lib/initcpio/hooks/ramroot ] ||
[ ! -f /usr/lib/initcpio/install/ramroot ]; then
    if ! ("$binDir/ramroot-build"); then
        echo "!: ramroot NOT enabled"
        exit 1
    fi
fi

# get current init MODULES and HOOKS:
initMODULES=`grep -P '^ *MODULES=' /etc/mkinitcpio.conf`
initHOOKS=`grep -P '^ *HOOKS=' /etc/mkinitcpio.conf`

fNew=0
# add zram to MODULES:
if [[ ! "$initMODULES" =~ zram ]]; then
    if [ "$initMODULES" = 'MODULES=""' ]; then
        initMODULES='MODULES="zram"'
    else
        initMODULES="${initMODULES%*\"} zram\""
    fi
    echo ":: Added MODULE: zram"
    fNew=1
fi
# add ext4 to MODULES:
if [[ ! "$initMODULES" =~ ext4 ]]; then
    initMODULES="${initMODULES%*\"} ext4\""
    echo ":: Added MODULE: ext4"
    fNew=1
fi
# add ramroot HOOK:
if [[ ! "$initHOOKS" =~ ramroot ]]; then
    initHOOKS="${initHOOKS%udev*}udev ramroot${initHOOKS#*udev}"
    echo ":: Added HOOK: ramroot"
    fNew=1
fi

if [ $fNew -eq 1 ]; then
    # prepare build:
    mkdir -p "$buildDir"
    sudo -k

    # build new mkinitcpio.conf:
    sed "s@^MODULES=.*@$initMODULES@g; \
        s@^HOOKS=.*@$initHOOKS@g;" \
        /etc/mkinitcpio.conf > "$buildDir/mkinitcpio_ramroot.conf" &&
    echo ":: new mkinitcpio.conf created in $buildDir" &&

    # copy new mkinitcpio.conf to /etc and rebuild linux image:
    echo "#: sudo cp $buildDir/mkinitcpio_ramroot.conf /etc/mkinitcpio.conf" &&
    echo "#: sudo mkinitcpio -p linux" &&
    sudo cp "$buildDir/mkinitcpio_ramroot.conf" /etc/mkinitcpio.conf &&
    sudo mkinitcpio -p linux &&
    echo ":: ramroot enabled" &&
    exit 0 ||
    echo "!: ramroot NOT enabled" &&
    exit 1
else
    echo ":: ramroot already enabled"
    exit 0
fi
