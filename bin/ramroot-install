#!/bin/bash
##==========================  ramroot-install  ===========================##
# This script builds the ramroot hook and install files required to copy
# the root filesystem to RAM.  This script must be run in a normal login
# session (no chroot) to access the UUID of the root partition correctly.

# get ramroot/bin, ramroot/build, and ramroot/src directory paths:
binDir="$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )"
cd "$binDir"
cd ..
srcDir="$PWD/src"
buildDir="$PWD/build"

# get root UUID:
rootUUID=
if [ ! -d '/' ]; then
    echo ":: Nothing mounted: /"
    exit 1
fi
rootInfo=( `lsblk -n -o UUID,mountpoint | grep -P ' / *$'` )
rootUUID="${rootInfo[0]}"
if [ -z "${rootInfo[1]}" ]; then
    echo ":: Unable to get UUID of root: /"
    exit 1
fi
echo ":: / UUID: $rootUUID"

# get boot UUID:
bootUUID=
if [ -d '/boot' ]; then
    bootInfo=( `lsblk -n -o UUID,mountpoint | grep -P ' /boot *$'` )
    bootUUID="${bootInfo[0]}"
    echo ":: /boot UUID: $bootUUID"
fi

# prepare build:
hooksDir="/usr/lib/initcpio/hooks"
installDir="/usr/lib/initcpio/install"
mkdir -p "$buildDir"
sudo -k

# build hook and install scripts:
sed "s@rootUUID=.*@rootUUID=\'$rootUUID\'@g; \
    s@bootUUID=.*@bootUUID=\'$bootUUID\'@g;" \
    "$srcDir/initcpio/hooks/ramroot" > "$buildDir/ramroot_hook"
cp "$srcDir/initcpio/hooks/ramroot" "$buildDir/ramroot_install"

# copy hook and install scripts to /usr/lib/initcpio/:
echo ":# sudo cp $buildDir/ramroot_hook $hooksDir/ramroot"
echo ":# sudo cp $buildDir/ramroot_install $installDir/ramroot"
sudo cp "$buildDir/ramroot_hook" "$hooksDir/ramroot"
sudo cp "$buildDir/ramroot_install" "$installDir/ramroot"
echo ":: ramroot installed"
